plugins {
    id 'java'
    id 'antlr'
//    id "idea"
}

//apply plugin: "idea"

group 'org.UCEL'
version '1.0-SNAPSHO'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.mockito:mockito-core:4.8.0'
    testRuntimeOnly 'org.mockito:mockito-all:1.10.19'
    antlr "org.antlr:antlr4:4.11.1"
    antlr "org.antlr:ST4:4.3.4" // String Template
}
//
//build2 {
//    include('./src/**')
//    include('./parser/gen/**')
//}







//sourceSets {
//    main {
//        java {
//            srcDir "src/main/java"
//            srcDir "build/generated-src/antlr/main/AntlrParser"
//        }
//    }
//}
//compileJava.dependsOn("generateGrammarSource")


//sourceSets.main.java.srcDirs += "${project.buildDir}/generated-src/antlr/main/AntlrParser"
//sourceSets.main.java.srcDirs    +=      "${project.buildDir}/generated-src/antlr/main/AntlrParser"
//idea.module.generatedSourceDirs += file("${project.buildDir}/generated-src/antlr/main/AntlrParser")
//// sourceSets.main.java.srcDirs += SrcDir("${project.buildDir}/generated-src/antlr/main/AntlrParser")
//
//sourceSets["main"].java.srcDirs()

//sourceSets {
//    main {
//        java {
////            srcDir "main"
////            srcDir "main/antlr/parser"
//            srcDir "src/main/antlr"
//            srcDir "src/main/java"
//            srcDir "${project.buildDir}/generated-src/antlr/main/AntlrParser"
//            dependencies {
//                antlr "org.antlr:antlr4:4.11.1"
//                antlr "org.antlr:ST4:4.3.4" // String Template
//            }
////            TypeChecker {
////                srcDir "${project.buildDir}/generated-src/antlr/main"
////            }
//        }
//    }
//}


// Test
test {
    useJUnitPlatform()

//    include 'src/test/**'
//    include 'test/TypeCheckerTest/TypeCheckerTests.java'
//
//    // show standard out and standard error of the test JVM(s) on the console
//    testLogging.showStandardStreams = true
//
//    // set heap size for the test JVM(s)
//    minHeapSize = "128m"
//    maxHeapSize = "512m"
//
//    // set JVM arguments for the test JVM(s)
//    jvmArgs '-XX:MaxPermSize=256m'
//
//    // listen to events in the test execution lifecycle
//    beforeTest {
//        descriptor -> logger.lifecycle("Running test: " + descriptor)
//    }
//    // listen to standard out and standard error of the test JVM(s)
//    onOutput {
//        descriptor, event -> logger.lifecycle
//        ("Test: " + descriptor + " produced standard out/err: "
//                + event.message )
//    }
}

generateGrammarSource {
    includes = ['*.g4']
    // https://stackoverflow.com/questions/36469546/what-is-minimal-sample-gradle-project-for-antlr4-with-antlr-plugin
    //outputDirectory = file("./src/main/antlr/parser")
    //outputDirectory = new File("${project.buildDir}/generated-src/java/TypeChecker".toString())
    outputDirectory = new File("src/main/java/UCELParser_Generated".toString())

    arguments += ["-listener", "-visitor"]
}
